spring:
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  shardingsphere:
    datasource:
      names: master,master1,slave,slave1
      master:
        driver-class-name: com.mysql.jdbc.Driver
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3340/test?characterEncoding=utf-8
        username: root
      master1:
        driver-class-name: com.mysql.jdbc.Driver
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3340/test2?characterEncoding=utf-8
        username: root
      slave:
        driver-class-name: com.mysql.jdbc.Driver
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3341/test?characterEncoding=utf-8
        username: root
      slave1:
        driver-class-name: com.mysql.jdbc.Driver
        password: 123456
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3341/test2?characterEncoding=utf-8
        username: root
    props:
      sql:
        show: true
    sharding:

      master-slave-rules:
        ds_0:
          master-data-source-name: master
          slave-data-source-names: slave
        ds_1:
          master-data-source-name: master1
          slave-data-source-names: slave1
      binding-tables: t_order,t_user
      #broadcast-tables: t_config
#      default-database-strategy:
#        inline:
#          sharding-column: user_id
#          algorithm-expression: ds_$->{user_id % 2}
      tables:
        t_order:
         key-generator:
            column: order_id
            type: SNOWFLAKE
         actual-data-nodes: ds_$->{0..1}.t_order_$->{0..1}
         table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: t_order_$->{user_id % 2}
         databaseStrategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds_$->{user_id % 2}
        t_user:
          key-generator:
            column: user_id
            type: SNOWFLAKE
          actual-data-nodes: ds_$->{0..1}.t_user_$->{0..1}
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: t_user_$->{user_id % 2}
          databaseStrategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds_$->{user_id % 2}





